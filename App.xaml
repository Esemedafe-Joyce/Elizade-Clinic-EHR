<Application x:Class="ElizadeEHR.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ElizadeEHR"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--<converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>-->

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="/Fonts/#Poppins"/>
        </Style>
        
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="/Fonts/#Poppins"/>
        </Style>

        
        
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Cursor" Value="Hand"/>
            <!-- Ensure button has a consistent height -->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="0"
                         CornerRadius="10" 
                     Padding="10">
                            <!-- Rounded corners -->
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0"/>
                                <!-- Lighter gray on hover -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedDashboardButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="#26547C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <!-- Transparent background -->
            <Setter Property="Padding" Value="10,5"/>
            <!-- Consistent padding -->
            <Setter Property="Height" Value="60"/>
            <!-- Fixed height for consistent button size -->
            <Setter Property="Width" Value="200"/>
            <!-- Fixed width for consistent button size -->
            <Setter Property="Foreground" Value="#26547C"/>
            <!-- Default text color -->
            <Setter Property="Cursor" Value="Hand"/>
            <!-- Hand cursor on hover -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8"
                            Padding="{TemplateBinding Padding}">

                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="8"
                        Padding="8,4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#26547C"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedComboBoxStyle" TargetType="ComboBox">
            <!-- Basic Properties -->
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Foreground" Value="#26547C"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#26547C"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Poppins"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Cursor" Value="Hand"/>

            <!-- Control Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Main Toggle Button -->
                            <ToggleButton x:Name="ToggleButton"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  Background="{TemplateBinding Background}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Focusable="False">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="border" 
                                        CornerRadius="8" 
                                               
                                         Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <!-- Selected Item -->
                                                <ContentPresenter Grid.Column="0"
                                                     Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                     ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                     Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                     VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                     HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                                                    <ContentPresenter.Resources>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="White"/>
                                                        </Style>
                                                    </ContentPresenter.Resources>
                                                </ContentPresenter>


                                                <!-- Dropdown Arrow -->
                                                <Path Grid.Column="1" 
                                              x:Name="Arrow" 
                                              Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                              Data="M 0 0 L 4 4 L 8 0 Z" 
                                              Margin="0,0,10,0" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                              Width="8" 
                                              Height="4"/>
                                            </Grid>
                                        </Border>
                                        <!-- No visual effects when clicked as requested -->
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <!-- Dropdown Popup -->
                            <Popup x:Name="PART_Popup" 
                           AllowsTransparency="True" 
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                           Placement="Bottom" 
                           PopupAnimation="Fade" 
                           Focusable="False">
                                <Border x:Name="DropDownBorder" 
                                Background="White" 
                                BorderBrush="#26547C" 
                                BorderThickness="1" 
                                CornerRadius="10">
                                    <ScrollViewer x:Name="DropDownScrollViewer"
                                          Margin="4"
                                          SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <!-- Main template triggers -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ToggleButton" Property="IsEnabled" Value="False"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Item Container Style -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Foreground" Value="#26547C"/>
                        <Setter Property="Padding" Value="5,3"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">

                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Border"
                                    Padding="{TemplateBinding Padding}"
                                            Width="150"
                                    Background="Transparent"
                                    BorderThickness="0">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#F0F7FF"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedPrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#26547C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="5">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2E5665"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1E3D4A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>

